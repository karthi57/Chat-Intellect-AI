const chatInput=document.querySelector("#chat-input"),sendButton=document.querySelector("#send-btn"),chatContainer=document.querySelector(".chat-container"),themeButton=document.querySelector("#theme-btn"),deleteButton=document.querySelector("#delete-btn");let userText=null;const API_KEY="",loadDataFromLocalstorage=()=>{const t=localStorage.getItem("theme-color");document.body.classList.toggle("light-mode","light_mode"===t),themeButton.innerText=document.body.classList.contains("light-mode")?"dark_mode":"light_mode";chatContainer.innerHTML=localStorage.getItem("all-chats")||'   \n                            <div class="default-text">\n                            <div class="border">\n                            <h1>INFOâ €CHAT</h1>\n                            <p> Start a conversation and explore the power of AI Chat_Intelect.</p> </div>\n                            </div>',chatContainer.scrollTo(0,chatContainer.scrollHeight)};loadDataFromLocalstorage();const createElement=(t,e)=>{const n=document.createElement("div");return n.classList.add("chat",e),n.innerHTML=t,n},getChatResponse=async t=>{const e=document.createElement("p"),n={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${API_KEY}`},body:JSON.stringify({model:"text-davinci-003",prompt:userText,max_tokens:2048,temperature:.2,n:1,stop:null})};try{const t=await(await fetch("https://api.openai.com/v1/completions",n)).json();e.textContent=t.choices[0].text.trim()}catch(t){e.classList.add("error"),e.textContent="Oops!! Something went wrong... Try again . "}t.querySelector(".typing-animation").remove(),t.querySelector(".chat-details").appendChild(e),chatContainer.scrollTo(0,chatContainer.scrollHeight),localStorage.setItem("all_chat",chatContainer.innerHTML)},copyResponse=t=>{const e=t.parentElement.querySelector("p");navigator.clipboard.writeText(e.textContent),t.textContent="done",setTimeout((()=>t.textContent="content_copy"),1e3)},showTypingAnimation=()=>{userText=chatInput.value.trim();const t=createElement('<div class="chat-content">\n                    <div class="chat-details">\n                        <img src="images/chatbot.jpg" alt="chat-img">\n                        <div class="typing-animation">\n                            <div class="typing-dot" style="--delay: 0.2s"></div> \n                            <div class="typing-dot" style="--delay: 0.3s"></div>\n                            <div class="typing-dot" style="--delay: 0.4s"></div>  \n                        </div>\n                    </div>\n                    <span onclick="copyResponse(this) "class="material-symbols-rounded">content_copy</span>\n                </div>',"incoming");chatContainer.appendChild(t),chatContainer.scrollTo(0,chatContainer.scrollHeight),getChatResponse(t)},handleOutgoingChat=()=>{if(userText=chatInput.value.trim(),!userText)return;const t=createElement('<div class="chat-content">\n                    <div class="chat-details">\n                       <img src="images/user.jpeg" alt="user-img">\n                       <p></p>\n                    </div>\n                </div>',"outgoing");t.querySelector("p").textContent=userText,document.querySelector(".default-text")?.remove(),chatContainer.appendChild(t),chatContainer.scrollTo(0,chatContainer.scrollHeight),setTimeout(showTypingAnimation,500)};themeButton.addEventListener("click",(()=>{document.body.classList.toggle("light-mode"),localStorage.setItem("theme-color",themeButton.innerText),themeButton.innerText=document.body.classList.contains("light-mode")?"dark_mode":"light_mode"})),deleteButton.addEventListener("click",(()=>{confirm("Are you sure you want to delete all the chats?")&&(localStorage.removeItem("all-chats"),loadDataFromLocalstorage())})),chatInput.addEventListener("keydown",(t=>{"Enter"===t.key&&!t.shiftKey&&window.innerWidth>800&&(t.preventDefault(),handleOutgoingChat())})),sendButton.addEventListener("click",handleOutgoingChat);
